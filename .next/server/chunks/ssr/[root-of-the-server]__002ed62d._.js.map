{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/logContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface LogEntry {\r\n  time: string;\r\n  message: string;\r\n}\r\n\r\ninterface LogsContextType {\r\n  logs: LogEntry[];\r\n  setLogs: React.Dispatch<React.SetStateAction<LogEntry[]>>;\r\n}\r\n\r\nconst LogsContext = createContext<LogsContextType | undefined>(undefined);\r\n\r\nexport const LogsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  return (\r\n    <LogsContext.Provider value={{ logs, setLogs }}>\r\n      {children}\r\n    </LogsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLogs = () => {\r\n  const context = useContext(LogsContext);\r\n  if (!context) throw new Error(\"useLogs must be used within a LogsProvider\");\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAcA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC/C,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBAC1C;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedFolderContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\ninterface FolderContextType {\r\n  selectedFile: string;\r\n  setSelectedFile: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst SelectedFolderContext = createContext<FolderContextType>({\r\n  selectedFile: \"Home.jsx\",\r\n  setSelectedFile: () => {},  \r\n});\r\n\r\nexport const SelectedFolderProvider: React.FC<{\r\n  children: React.ReactNode;\r\n}> = ({ children }) => {\r\n  const [selectedFile, setSelectedFile] = React.useState<string>(\"Home.jsx\");\r\n  return (\r\n    <SelectedFolderContext.Provider value={{ selectedFile, setSelectedFile }}>\r\n      {children}\r\n    </SelectedFolderContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFolder = () => {\r\n  const context = useContext(SelectedFolderContext);\r\n  if (!context) throw new Error(\"useLogs must be used within a LogsProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;;AAUA,MAAM,sCAAwB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAqB;IAC7D,cAAc;IACd,iBAAiB,KAAO;AAC1B;AAEO,MAAM,yBAER,CAAC,EAAE,QAAQ,EAAE;IAChB,MAAM,CAAC,cAAc,gBAAgB,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAS;IAC/D,qBACE,8OAAC,sBAAsB,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBACpE;;;;;;AAGP;AAEO,MAAM,YAAY;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedTabContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport type Tab = {\r\n  id: string;\r\n  title: string;\r\n  icon: React.ElementType;\r\n};\r\n\r\ntype State = {\r\n  tabs: Tab[];\r\n  activeId: string | null;\r\n};\r\n\r\ntype Action =\r\n  | { type: \"OPEN_TAB\"; tab: Tab }\r\n  | { type: \"ACTIVE_TAB\"; id: string }\r\n  | { type: \"CLOSE_TAB\"; id: string };\r\n\r\nconst initialState: State = {\r\n  tabs: [{ id: \"1.1.1.1\", title: \"Home.tsx\", icon: FaReact }],\r\n  activeId: \"1.1.1.1\",\r\n};\r\n\r\nfunction reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case \"OPEN_TAB\": {\r\n      const exists = state.tabs.some((t) => t.id === action.tab.id);\r\n      const tabs = exists ? state.tabs : [...state.tabs, action.tab];\r\n      return { tabs, activeId: action.tab.id };\r\n    }\r\n    case \"ACTIVE_TAB\": {\r\n      if (!state.tabs.some((t) => t.id === action.id)) return state;\r\n      return { ...state, activeId: action.id };\r\n    }\r\n    case \"CLOSE_TAB\": {\r\n      const idx = state.tabs.findIndex((t) => t.id === action.id);\r\n      if (idx === -1) return state;\r\n      const tabs = state.tabs.filter((t) => t.id != action.id);\r\n      if (tabs.length === 0) return { tabs: [], activeId: null };\r\n      const wasActive = state.activeId === action.id;\r\n      const nextIndex = idx < tabs.length ? idx : tabs.length - 1;\r\n      const nextActiveId = wasActive ? tabs[nextIndex].id : state.activeId;\r\n      return { tabs, activeId: nextActiveId };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype Ctx = {\r\n  tabs: State[\"tabs\"];\r\n  activeId: State[\"activeId\"];\r\n  openTab: (tab: Tab) => void;\r\n  activeTab: (id: string) => void;\r\n  closeTab: (id: string) => void;\r\n};\r\n\r\nconst SelectedTabContext = createContext<Ctx | undefined>(undefined);\r\n\r\nexport const SelectedTabProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const value: Ctx = {\r\n    tabs: state.tabs,\r\n    activeId: state.activeId,\r\n    openTab: (tab) => dispatch({ type: \"OPEN_TAB\", tab }),\r\n    activeTab: (id: string) => dispatch({ type: \"ACTIVE_TAB\", id }),\r\n    closeTab: (id: string) => dispatch({ type: \"CLOSE_TAB\", id }),\r\n  };\r\n  return (\r\n    <SelectedTabContext.Provider value={value}>\r\n      {children}\r\n    </SelectedTabContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedTab = (): Ctx => {\r\n  const context = useContext(SelectedTabContext);\r\n  if (!context)\r\n    throw new Error(\"useLogs must be used within a SelectedTabProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAqBA,MAAM,eAAsB;IAC1B,MAAM;QAAC;YAAE,IAAI;YAAW,OAAO;YAAY,MAAM,8IAAA,CAAA,UAAO;QAAC;KAAE;IAC3D,UAAU;AACZ;AAEA,SAAS,QAAQ,KAAY,EAAE,MAAc;IAC3C,OAAQ,OAAO,IAAI;QACjB,KAAK;YAAY;gBACf,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,GAAG,CAAC,EAAE;gBAC5D,MAAM,OAAO,SAAS,MAAM,IAAI,GAAG;uBAAI,MAAM,IAAI;oBAAE,OAAO,GAAG;iBAAC;gBAC9D,OAAO;oBAAE;oBAAM,UAAU,OAAO,GAAG,CAAC,EAAE;gBAAC;YACzC;QACA,KAAK;YAAc;gBACjB,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,EAAE,GAAG,OAAO;gBACxD,OAAO;oBAAE,GAAG,KAAK;oBAAE,UAAU,OAAO,EAAE;gBAAC;YACzC;QACA,KAAK;YAAa;gBAChB,MAAM,MAAM,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,EAAE;gBAC1D,IAAI,QAAQ,CAAC,GAAG,OAAO;gBACvB,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,IAAI,OAAO,EAAE;gBACvD,IAAI,KAAK,MAAM,KAAK,GAAG,OAAO;oBAAE,MAAM,EAAE;oBAAE,UAAU;gBAAK;gBACzD,MAAM,YAAY,MAAM,QAAQ,KAAK,OAAO,EAAE;gBAC9C,MAAM,YAAY,MAAM,KAAK,MAAM,GAAG,MAAM,KAAK,MAAM,GAAG;gBAC1D,MAAM,eAAe,YAAY,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,MAAM,QAAQ;gBACpE,OAAO;oBAAE;oBAAM,UAAU;gBAAa;YACxC;QACA;YACE,OAAO;IACX;AACF;AAUA,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;AAEnD,MAAM,sBAA+D,CAAC,EAC3E,QAAQ,EACT;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,SAAS;IAE9C,MAAM,QAAa;QACjB,MAAM,MAAM,IAAI;QAChB,UAAU,MAAM,QAAQ;QACxB,SAAS,CAAC,MAAQ,SAAS;gBAAE,MAAM;gBAAY;YAAI;QACnD,WAAW,CAAC,KAAe,SAAS;gBAAE,MAAM;gBAAc;YAAG;QAC7D,UAAU,CAAC,KAAe,SAAS;gBAAE,MAAM;gBAAa;YAAG;IAC7D;IACA,qBACE,8OAAC,mBAAmB,QAAQ;QAAC,OAAO;kBACjC;;;;;;AAGP;AAEO,MAAM,iBAAiB;IAC5B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SACH,MAAM,IAAI,MAAM;IAClB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/panelContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState } from \"react\";\r\n\r\ntype PanelToggleContextType = {\r\n  leftOpen: boolean;\r\n  setLeftOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  rightOpen: boolean;\r\n  setRightOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  bottomOpen: boolean;\r\n  setBottomOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst PanelContext = createContext<PanelToggleContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const PanelProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [leftOpen, setLeftOpen] = useState(true);\r\n  const [rightOpen, setRightOpen] = useState(true);\r\n  const [bottomOpen, setBottomOpen] = useState(true);\r\n  return (\r\n    <PanelContext.Provider\r\n      value={{\r\n        leftOpen,\r\n        setLeftOpen,\r\n        rightOpen,\r\n        setRightOpen,\r\n        bottomOpen,\r\n        setBottomOpen,\r\n      }}\r\n    >\r\n      {children}\r\n    </PanelContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePanel = () => {\r\n  const context = useContext(PanelContext);\r\n  if (!context) throw new Error(\"usePanel must be used inside PanelProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAaA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAC/B;AAGK,MAAM,gBAAyD,CAAC,EACrE,QAAQ,EACT;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,qBACE,8OAAC,aAAa,QAAQ;QACpB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}}]
}