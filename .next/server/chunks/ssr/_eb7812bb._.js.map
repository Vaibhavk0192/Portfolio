{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/logContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const LogsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogsProvider() from the server but LogsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/logContext.tsx <module evaluation>\",\n    \"LogsProvider\",\n);\nexport const useLogs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLogs() from the server but useLogs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/logContext.tsx <module evaluation>\",\n    \"useLogs\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,4DACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,4DACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/logContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const LogsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogsProvider() from the server but LogsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/logContext.tsx\",\n    \"LogsProvider\",\n);\nexport const useLogs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLogs() from the server but useLogs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/logContext.tsx\",\n    \"useLogs\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wCACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wCACA","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedFolderContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SelectedFolderProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectedFolderProvider() from the server but SelectedFolderProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedFolderContext.tsx <module evaluation>\",\n    \"SelectedFolderProvider\",\n);\nexport const useFolder = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFolder() from the server but useFolder is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedFolderContext.tsx <module evaluation>\",\n    \"useFolder\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,uEACA;AAEG,MAAM,YAAY,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,uEACA","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedFolderContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SelectedFolderProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectedFolderProvider() from the server but SelectedFolderProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedFolderContext.tsx\",\n    \"SelectedFolderProvider\",\n);\nexport const useFolder = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFolder() from the server but useFolder is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedFolderContext.tsx\",\n    \"useFolder\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,mDACA;AAEG,MAAM,YAAY,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mDACA","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedTabContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SelectedTabProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectedTabProvider() from the server but SelectedTabProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedTabContext.tsx <module evaluation>\",\n    \"SelectedTabProvider\",\n);\nexport const useSelectedTab = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSelectedTab() from the server but useSelectedTab is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedTabContext.tsx <module evaluation>\",\n    \"useSelectedTab\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,oEACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oEACA","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedTabContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SelectedTabProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectedTabProvider() from the server but SelectedTabProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedTabContext.tsx\",\n    \"SelectedTabProvider\",\n);\nexport const useSelectedTab = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSelectedTab() from the server but useSelectedTab is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/selectedTabContext.tsx\",\n    \"useSelectedTab\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,gDACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gDACA","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/panelContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PanelProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PanelProvider() from the server but PanelProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/panelContext.tsx <module evaluation>\",\n    \"PanelProvider\",\n);\nexport const usePanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePanel() from the server but usePanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/panelContext.tsx <module evaluation>\",\n    \"usePanel\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,WAAW,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,8DACA","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/panelContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PanelProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PanelProvider() from the server but PanelProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/panelContext.tsx\",\n    \"PanelProvider\",\n);\nexport const usePanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePanel() from the server but usePanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/panelContext.tsx\",\n    \"usePanel\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,WAAW,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0CACA","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport \"./globals.css\";\nimport { LogsProvider } from \"@/context/logContext\";\nimport { SelectedFolderProvider } from \"@/context/selectedFolderContext\";\nimport { SelectedTabProvider } from \"@/context/selectedTabContext\";\nimport { PanelProvider } from \"@/context/panelContext\";\n\nexport const metadata: Metadata = {\n  title: \"Vaibhav Kapoor\",\n  description: \"Vaibhav Kapoor's Portfolio\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <PanelProvider>\n          <SelectedTabProvider>\n            <SelectedFolderProvider>\n              <LogsProvider>{children}</LogsProvider>\n            </SelectedFolderProvider>\n          </SelectedTabProvider>\n        </PanelProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,+HAAA,CAAA,gBAAa;0BACZ,cAAA,8OAAC,qIAAA,CAAA,sBAAmB;8BAClB,cAAA,8OAAC,wIAAA,CAAA,yBAAsB;kCACrB,cAAA,8OAAC,6HAAA,CAAA,eAAY;sCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7B","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}