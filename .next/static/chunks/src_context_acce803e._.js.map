{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/logContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface LogEntry {\r\n  time: string;\r\n  message: string;\r\n}\r\n\r\ninterface LogsContextType {\r\n  logs: LogEntry[];\r\n  setLogs: React.Dispatch<React.SetStateAction<LogEntry[]>>;\r\n}\r\n\r\nconst LogsContext = createContext<LogsContextType | undefined>(undefined);\r\n\r\nexport const LogsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  return (\r\n    <LogsContext.Provider value={{ logs, setLogs }}>\r\n      {children}\r\n    </LogsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLogs = () => {\r\n  const context = useContext(LogsContext);\r\n  if (!context) throw new Error(\"useLogs must be used within a LogsProvider\");\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAcA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD;QAAC,EAAE,QAAQ,EAAE;;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC/C,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBAC1C;;;;;;AAGP;GAPa;KAAA;AASN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;IAJa","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///H:/web_dev/PortfolioCodeEditor/portfolio/src/context/selectedFolderContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\ninterface FolderContextType {\r\n  selectedFile: string;\r\n  setSelectedFile: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst SelectedFolderContext = createContext<FolderContextType>({\r\n  selectedFile: \"Home.jsx\",\r\n  setSelectedFile: () => {},  \r\n});\r\n\r\nexport const SelectedFolderProvider: React.FC<{\r\n  children: React.ReactNode;\r\n}> = ({ children }) => {\r\n  const [selectedFile, setSelectedFile] = React.useState<string>(\"Home.jsx\");\r\n  return (\r\n    <SelectedFolderContext.Provider value={{ selectedFile, setSelectedFile }}>\r\n      {children}\r\n    </SelectedFolderContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFolder = () => {\r\n  const context = useContext(SelectedFolderContext);\r\n  if (!context) throw new Error(\"useLogs must be used within a LogsProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;;AAUA,MAAM,sCAAwB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAqB;IAC7D,cAAc;IACd,iBAAiB,KAAO;AAC1B;AAEO,MAAM,yBAER;QAAC,EAAE,QAAQ,EAAE;;IAChB,MAAM,CAAC,cAAc,gBAAgB,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAS;IAC/D,qBACE,6LAAC,sBAAsB,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBACpE;;;;;;AAGP;GATa;KAAA;AAWN,MAAM,YAAY;;IACvB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;IAJa","debugId":null}}]
}